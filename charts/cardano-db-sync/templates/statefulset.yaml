apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cardano-db-sync.fullname" . }}
  labels:
    {{- include "cardano-db-sync.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cardano-db-sync.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "cardano-db-sync.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cardano-db-sync.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: NETWORK
              value: {{ .Values.network }}
            - name: POSTGRES_HOST
              value: {{ .Values.postgres.host }}
            - name: POSTGRES_PORT
              value: {{ .Values.postgres.port | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.dbName }}
            {{- if .Values.postgres.secret.name }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secret.name }}
                  key: {{ .Values.postgres.secret.usernameKey }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secret.name }}
                  key: {{ .Values.postgres.secret.passwordKey }}
            {{- else }}
            - name: POSTGRES_USER
              value: {{ .Values.postgres.username }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.password }}
            {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
#          livenessProbe:
#            {{- toYaml .Values.livenessProbe | nindent 12 }}
#          readinessProbe:
#            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: node-ipc
              mountPath: "/node-ipc"
            - name: {{ include "cardano-db-sync.fullname" . }}-db
              mountPath: "/var/lib"
        - name: socat-socket-server
          image: alpine/socat
          env:
            - name: CARDANO_NODE_SOCKET_TCP_HOST
              value: {{ .Values.socat.host }}
            - name: CARDANO_NODE_SOCKET_TCP_PORT
              value: {{ .Values.socat.port | quote }}
            - name: NODE_SOCKET_PATH
              value: {{ .Values.nodeSocketPath }}
          command: ["sh", "-c", "rm -f ${NODE_SOCKET_PATH}; socat UNIX-LISTEN:${NODE_SOCKET_PATH},fork,reuseaddr,unlink-early TCP:${CARDANO_NODE_SOCKET_TCP_HOST}:${CARDANO_NODE_SOCKET_TCP_PORT},ignoreeof"]
          volumeMounts:
            - name: node-ipc
              mountPath: "/node-ipc"
      volumes:
        - name: node-ipc
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "cardano-db-sync.fullname" . }}-db
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.dbSize }}
