apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "midnight-node.fullname" . }}
  labels:
    {{- include "midnight-node.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "midnight-node.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "midnight-node.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "midnight-node.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.maintenanceMode }}
          image: ubuntu
          command: [ "sh", "-c", "sleep infinity" ]
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- end }}

          env:
            {{- if .Values.debug.enabled }}
            - name: RUST_LOG
              value: debug
            {{- end }}

            - name: POSTGRES_HOST
              value: {{ .Values.postgres.host }}
            - name: POSTGRES_PORT
              value: {{ .Values.postgres.port | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.dbName }}
            {{- if .Values.postgres.secret.name }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secret.name }}
                  key: {{ .Values.postgres.secret.usernameKey }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secret.name }}
                  key: {{ .Values.postgres.secret.passwordKey }}
            {{- else }}
            - name: POSTGRES_USER
              value: {{ .Values.postgres.username }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.password }}
            {{- end }}
            - name: DB_SYNC_POSTGRES_CONNECTION_STRING
              value: psql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):5432/cexplorer

            - name: BASE_PATH
              value: ./data/chains/partner_chains_template

            - name: BOOTNODES
              value: |
                /dns/boot-node-01.testnet-02.midnight.network/tcp/30333/ws/p2p/12D3KooWMjUq13USCvQR9Y6yFzYNYgTQBLNAcmc8psAuPx2UUdnB \
                /dns/boot-node-02.testnet-02.midnight.network/tcp/30333/ws/p2p/12D3KooWR1cHBUWPCqk3uqhwZqUFekfWj8T7ozK6S18DUT745v4d \
                /dns/boot-node-03.testnet-02.midnight.network/tcp/30333/ws/p2p/12D3KooWQxxUgq7ndPfAaCFNbAxtcKYxrAzTxDfRGNktF75SxdX5

            - name: APPEND_ARGS
              value: "--no-private-ip --validator --pool-limit 10 --trie-cache-size 0 --prometheus-external"

            - name: CFG_PRESET
              value: {{ .Values.node.config.preset }}

            {{- if .Values.node.keys.secretName }}
            - name: NODE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.node.keys.secretName }}
                  key: {{ .Values.node.keys.nodeKeyKey }}
            {{- end }}

          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: health
              containerPort: 9933
              protocol: TCP
            - name: rpc
              containerPort: 9944
              protocol: TCP
            - name: p2p
              containerPort: 30333
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: {{ include "midnight-node.fullname" . }}-db
              mountPath: /data
            {{- if .Values.node.network.secretName }}
            - name: network
              readOnly: true
              mountPath: /data/chains/partner_chains_template/chains/testnet/network
            {{- end }}
            {{- if .Values.node.keystore.secretName }}
            - name: keystore
              mountPath: {{ printf "/data/chains/partner_chains_template/chains/testnet/keystore/%s" .Values.node.keystore.sidechainSecretKey }}
              subPath: {{ .Values.node.keystore.sidechainSecretKey }}
            - name: keystore
              mountPath: {{ printf "/data/chains/partner_chains_template/chains/testnet/keystore/%s" .Values.node.keystore.auraSecretKey }}
              subPath: {{ .Values.node.keystore.auraSecretKey }}
            - name: keystore
              mountPath: {{ printf "/data/chains/partner_chains_template/chains/testnet/keystore/%s" .Values.node.keystore.grandpaSecretKey }}
              subPath: {{ .Values.node.keystore.grandpaSecretKey }}
            {{- end }}
      volumes:
      {{- if .Values.node.network.secretName }}
        - name: network
          secret:
            secretName: {{ .Values.node.network.secretName }}
      {{- end }}
      {{- if .Values.node.keystore.secretName }}
        - name: keystore
          secret:
            secretName: {{ .Values.node.keystore.secretName }}
            defaultMode: 0600
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "midnight-node.fullname" . }}-db
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.volumeSize }}